{"version":3,"sources":["Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/SearchBar/SearchBar.js","Components/Button/Button.js","Components/Layout/Layout.js","Components/Loader/Loader.js","Utils/ImageApi.js","Components/Modal/Modal.js","Components/App.js","index.js"],"names":["ImageGallery","children","className","ImageGalleryItem","id","img","alt","large","onHandleModalUrl","onClick","src","data-url","SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSabmit","preventDefault","console","log","props","onSubmit","this","type","autocomplete","autofocus","placeholder","onChange","Component","Button","fechArticles","Layout","Spiner","color","height","width","FechImageApi","serchQuery","page","axios","get","then","response","data","hits","Modal","image","onHandleClick","App","images","loading","error","largeImageURL","prevState","handleScrol","catch","finally","handleSearchFormSubmit","query","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleModalUrl","url","dataset","handleClick","nodeName","onPressEscape","event","code","prevProps","prevQuery","nextQuery","addEventListener","removeEventListener","message","length","map","webformatURL","tag","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d019f51.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n\r\nexport default function ImageGallery({children}) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n    {children}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes ={\r\n  children: PropTypes.node.isRequired\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nconst ImageGalleryItem = ({ id, img, alt, large, onHandleModalUrl }) => {\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\" onClick={onHandleModalUrl}>\r\n      <img\r\n        src={img}\r\n        alt={alt}\r\n        data-url={large}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  large: PropTypes.string.isRequired,\r\n  onHandleModalUrl: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange=(e)=> {\r\n    this.setState({ inputValue: e.target.value });\r\n  }\r\n\r\n  handleSabmit = e =>{\r\n      e.preventDefault()\r\n\r\n      console.log(this.state.inputValue);\r\n      this.props.onSubmit(this.state.inputValue);\r\n      this.setState({inputValue: ''})\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSabmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\nconst Button = ({fechArticles} )=>{\r\n    return(\r\n        <button className='Button' type=\"button\" onClick={fechArticles}>\r\n            Load More\r\n          </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    fechArticles: PropTypes.func,\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport './Layout.css'\r\n\r\nconst Layout = ({children}) => <div className='App'>{children}</div>;\r\n;\r\n\r\nexport default Layout","import React, { Component } from \"react\";\r\nimport  \"./Loader.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class Spiner extends Component {\r\n  render() {\r\n    return (\r\n      <div className='Loader'>\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\r\n      </div>\r\n    );\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nconst FechImageApi = (serchQuery, page) => {\r\n  const apyKey = \"18753901-48fe4160ef12c9ad3fe1a3bef\";\r\n\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${serchQuery}&page=${page}&key=${apyKey}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default FechImageApi\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ image, onHandleClick }) {\r\n  return (\r\n    <div className=\"Overlay\" onClick={onHandleClick}>\r\n      <div className=\"Modal\">\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  onHandleClick: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\n\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport Button from \"./Button/Button\";\nimport Layout from \"./Layout/Layout\";\nimport Loader from \"./Loader/Loader\";\nimport FechImageApi from \"../Utils/ImageApi\";\nimport Modal from \"./Modal/Modal\";\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    serchQuery: \"\",\n    page: 1,\n    largeImageURL: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.serchQuery;\n    const nextQuery = this.state.serchQuery;\n    const { largeImageURL } = this.state;\n\n    if (prevQuery !== nextQuery) {\n      this.fechArticles();\n    }\n\n    if (largeImageURL) {\n      window.addEventListener(\"keydown\", this.onPressEscape);\n    }\n    if (!largeImageURL) {\n      window.removeEventListener(\"keydown\", this.onPressEscape);\n    }\n  }\n\n  fechArticles = () => {\n    const { serchQuery, page } = this.state;\n    this.setState({ loading: true });\n\n    FechImageApi(serchQuery, page)\n      .then((response) => {\n        this.setState((prevState) => {\n          return {\n            images: [...prevState.images, ...response],\n            page: prevState.page + 1,\n          };\n        });\n        if (this.state.page > 2) {\n          this.handleScrol();\n        }\n      })\n\n      // .then((images) => this.setState(prevState=>({ images, page: prevState.page + 1 })))\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchFormSubmit = (query) => {\n    this.setState({\n      serchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  handleScrol = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  handleModalUrl = (url) => {\n    this.setState({ largeImageURL: url.target.dataset.url });\n  };\n\n  handleClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      this.setState({\n        largeImageURL: null,\n      });\n    }\n  };\n\n  onPressEscape = (event) => {\n    if (event.code === \"Escape\") {\n      this.setState({ largeImageURL: null });\n    }\n  };\n\n  render() {\n    const { loading, images, error, largeImageURL } = this.state;\n\n    return (\n      <Layout>\n        <SearchBar onSubmit={this.handleSearchFormSubmit} />\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n\n        {images.length > 0 && (\n          <ImageGallery>\n            {images.map((image) => (\n              <ImageGalleryItem\n                key={image.id}\n                img={image.webformatURL}\n                alt={image.tag}\n                large={image.largeImageURL}\n                onHandleModalUrl={this.handleModalUrl}\n              />\n            ))}\n          </ImageGallery>\n        )}\n        {loading && <Loader />}\n        {images.length > 0 && !loading && (\n          <Button fechArticles={this.fechArticles} />\n        )}\n        {largeImageURL && (\n          <Modal image={largeImageURL} onHandleClick={this.handleClick} />\n        )}\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}